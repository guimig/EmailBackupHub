name: Process Emails and Update Repository

on:
  schedule:
    - cron: '0 * * * *'  # Executar a cada 1 hora
  workflow_dispatch:

jobs:
  process:
    runs-on: ubuntu-22.04  # Especificar a versão do Ubuntu para evitar o uso do ubuntu-24.04

    steps:
      # Passo 1: Checkout do repositório
      - name: Checkout repository
        uses: actions/checkout@v2

      # Passo 2: Configuração do Python
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      # Passo 3: Instalação das dependências do Python
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install gitpython  # Instala o GitPython para manipulação do Git

      # Passo 4: Execução do script de processamento de e-mails
      - name: Run the email processing script
        run: |
          python process_emails.py
        env:
          GMAIL_CREDENTIALS: ${{ secrets.GMAIL_CREDENTIALS }}
          GMAIL_TOKEN: ${{ secrets.GMAIL_TOKEN }}  # Passando o token do Gmail via Secrets

      # Passo 5: Garante que o repositório Git está inicializado corretamente
      - name: Ensure Git repository is initialized
        run: |
          git init  # Garante que o repositório esteja inicializado
          git remote remove origin || true  # Remove o remote origin, se já existir
          git remote add origin https://github.com/${{ github.repository }}  # Adiciona o remote do repositório, se necessário
          git fetch  # Faz o fetch das referências remotas
          git checkout ${{ github.ref }}  # Garante que a branch correta seja utilizada

      # Passo 6: Verifica se há alterações antes de realizar commit e push
      #- name: Check if there are changes to commit
      #  run: |
      #    git diff --exit-code || echo "Changes detected"

      # Passo 7: Commit e push das alterações para o repositório
      - name: Commit and push changes to GitHub repository
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -am "Update emails backup and repository" || echo "No changes to commit"
          
          # Usando HTTPS para autenticação com token
          git push https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/${{ github.repository }} HEAD:${{ github.ref }}
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}  # Passando o token para push
